# -*- coding: utf-8 -*-
# vim: set et sw=4 sts=4 fileencoding=utf-8:
#
# PyPRTG - A Python helper library for PRTG
#
# Copyright (c) 2019 Paessler AG
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

"""
HTTP Push Data sensor clients.
"""

from paesslerag_prtg_sensor_api.clients.http import HttpPushDataAdvancedClient

__all__ = ["HttpIotPushDataAdvancedClient"]


class HttpIotPushDataAdvancedClient(HttpPushDataAdvancedClient):
    """
    HTTP IoT Push Data Advanced client.
    """

    _user_agent = "Paessler AG - PRTG HTTP IoT Push Data Advanced Client"

    def __init__(
        self, host, port, token, check_hostname=False, allow_self_signed_cert=False
    ):
        """
        Creates a new instance of the HTTP IoT Push Data Advanced Client.

        @param host: PRTG host name or IP address.
        @type host: str
        @param port: Port number of the target sensor.
        @type port: int or str
        @param token: The PRTG Sensor Token.
        @type token: str
        @param check_hostname: True, when the target host name shall
                               be verified against its certificate
                               upon connection, False, when the target's
                               host name doesn't need to match its
                               certificate. Default is False.
        @type check_hostname: bool
        @param allow_self_signed_cert: True to allow self-signed certificates,
                                       False to enforce a valid certificate
                                       chain. Default is False.
        @type allow_self_signed_cert: bool
        """
        super().__init__(
            host,
            port,
            token,
            use_ssl=True,
            check_hostname=check_hostname,
            allow_self_signed_cert=allow_self_signed_cert,
        )
